// components/Toast/Toast.tsx
import React from 'react';
import { toast, ToastContainer, ToastOptions } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';

// Icons (you can replace these with your preferred icon library)
const CheckIcon = () => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="19"
    height="19"
    viewBox="0 0 19 19"
    fill="none"
  >
    <g clipPath="url(#clip0_1383_10902)">
      <path
        d="M9.29348 0C7.45541 0 5.65861 0.545053 4.1303 1.56623C2.602 2.58741 1.41083 4.03886 0.707428 5.73702C0.00402672 7.43518 -0.180015 9.30379 0.178576 11.1065C0.537167 12.9093 1.42228 14.5652 2.722 15.865C4.02172 17.1647 5.67766 18.0498 7.48042 18.4084C9.28317 18.767 11.1518 18.5829 12.8499 17.8795C14.5481 17.1761 15.9995 15.985 17.0207 14.4567C18.0419 12.9284 18.587 11.1316 18.587 9.29348C18.587 8.07304 18.3466 6.86455 17.8795 5.73702C17.4125 4.60948 16.7279 3.58498 15.865 2.722C15.002 1.85902 13.9775 1.17446 12.8499 0.707424C11.7224 0.240383 10.5139 0 9.29348 0ZM9.29348 16.7283C7.82302 16.7283 6.38558 16.2922 5.16294 15.4753C3.94029 14.6583 2.98736 13.4972 2.42464 12.1386C1.86192 10.7801 1.71468 9.28523 2.00156 7.84302C2.28843 6.40082 2.99652 5.07607 4.0363 4.03629C5.07607 2.99652 6.40082 2.28843 7.84303 2.00155C9.28524 1.71468 10.7801 1.86191 12.1387 2.42463C13.4972 2.98736 14.6583 3.94029 15.4753 5.16293C16.2922 6.38558 16.7283 7.82302 16.7283 9.29348C16.7283 11.2653 15.945 13.1564 14.5507 14.5507C13.1564 15.945 11.2653 16.7283 9.29348 16.7283Z"
        fill="#38A938"
      />
      <path
        d="M12.4209 6.14491L8.90797 10.7916L7.39313 8.83073C7.24155 8.63601 7.01882 8.50948 6.77395 8.47898C6.52908 8.44848 6.28212 8.51651 6.0874 8.66809C5.89268 8.81967 5.76615 9.0424 5.73565 9.28727C5.70515 9.53215 5.77318 9.77911 5.92476 9.97382L8.18308 12.8641C8.2706 12.9749 8.3822 13.0642 8.50941 13.1254C8.63662 13.1866 8.7761 13.218 8.91726 13.2172C9.05919 13.2169 9.19916 13.1841 9.32642 13.1212C9.45369 13.0584 9.56487 12.9673 9.65145 12.8548L13.8986 7.27871C14.0489 7.08153 14.1148 6.8327 14.0817 6.58696C14.0486 6.34121 13.9192 6.11869 13.722 5.96833C13.5248 5.81798 13.276 5.75212 13.0302 5.78523C12.7845 5.81835 12.562 5.94773 12.4116 6.14491H12.4209Z"
        fill="#38A938"
      />
    </g>
    <defs>
      <clipPath id="clip0_1383_10902">
        <rect width="19" height="19" fill="white" />
      </clipPath>
    </defs>
  </svg>
);

const ErrorIcon = () => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="22"
    height="22"
    viewBox="0 0 22 22"
    fill="none"
  >
    <rect width="22" height="22" rx="11" fill="#F9F8F4" />
    <path
      d="M11 2.75C12.0834 2.75 13.1562 2.96339 14.1571 3.37799C15.1581 3.7926 16.0675 4.40029 16.8336 5.16637C17.5997 5.93245 18.2074 6.84193 18.622 7.84286C19.0366 8.8438 19.25 9.91659 19.25 11C19.25 12.0834 19.0366 13.1562 18.622 14.1571C18.2074 15.1581 17.5997 16.0675 16.8336 16.8336C16.0675 17.5997 15.1581 18.2074 14.1571 18.622C13.1562 19.0366 12.0834 19.25 11 19.25C8.81196 19.25 6.71354 18.3808 5.16637 16.8336C3.61919 15.2865 2.75 13.188 2.75 11C2.75 8.81196 3.61919 6.71354 5.16637 5.16637C6.71354 3.61919 8.81196 2.75 11 2.75ZM11 4.125C9.17664 4.125 7.42795 4.84933 6.13864 6.13864C4.84933 7.42795 4.125 9.17664 4.125 11C4.125 12.8234 4.84933 14.572 6.13864 15.8614C7.42795 17.1507 9.17664 17.875 11 17.875C12.8234 17.875 14.572 17.1507 15.8614 15.8614C17.1507 14.572 17.875 12.8234 17.875 11C17.875 9.17664 17.1507 7.42795 15.8614 6.13864C14.572 4.84933 12.8234 4.125 11 4.125ZM11 13.75C11.2735 13.75 11.5358 13.8587 11.7292 14.052C11.9226 14.2454 12.0312 14.5077 12.0312 14.7812C12.0312 15.0548 11.9226 15.3171 11.7292 15.5105C11.5358 15.7038 11.2735 15.8125 11 15.8125C10.7265 15.8125 10.4642 15.7038 10.2708 15.5105C10.0774 15.3171 9.96875 15.0548 9.96875 14.7812C9.96875 14.5077 10.0774 14.2454 10.2708 14.052C10.4642 13.8587 10.7265 13.75 11 13.75ZM11 6.1875C11.1609 6.18745 11.3167 6.24384 11.4404 6.34685C11.564 6.44986 11.6475 6.59297 11.6765 6.75125L11.6875 6.875V11.6875C11.6878 11.8593 11.6238 12.025 11.5081 12.152C11.3923 12.2789 11.2332 12.3579 11.0621 12.3735C10.891 12.389 10.7203 12.3399 10.5836 12.2358C10.4469 12.1318 10.3541 11.9803 10.3235 11.8113L10.3125 11.6875V6.875C10.3125 6.69266 10.3849 6.5178 10.5139 6.38886C10.6428 6.25993 10.8177 6.1875 11 6.1875Z"
      fill="#F52D2D"
    />
  </svg>
);

const WarningIcon = () => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="22"
    height="22"
    viewBox="0 0 22 22"
    fill="none"
  >
    <rect width="22" height="22" rx="11" fill="#F9F8F4" />
    <path
      d="M11 2.75C12.0834 2.75 13.1562 2.96339 14.1571 3.37799C15.1581 3.7926 16.0675 4.40029 16.8336 5.16637C17.5997 5.93245 18.2074 6.84193 18.622 7.84286C19.0366 8.8438 19.25 9.91659 19.25 11C19.25 12.0834 19.0366 13.1562 18.622 14.1571C18.2074 15.1581 17.5997 16.0675 16.8336 16.8336C16.0675 17.5997 15.1581 18.2074 14.1571 18.622C13.1562 19.0366 12.0834 19.25 11 19.25C8.81196 19.25 6.71354 18.3808 5.16637 16.8336C3.61919 15.2865 2.75 13.188 2.75 11C2.75 8.81196 3.61919 6.71354 5.16637 5.16637C6.71354 3.61919 8.81196 2.75 11 2.75ZM11 4.125C9.17664 4.125 7.42795 4.84933 6.13864 6.13864C4.84933 7.42795 4.125 9.17664 4.125 11C4.125 12.8234 4.84933 14.572 6.13864 15.8614C7.42795 17.1507 9.17664 17.875 11 17.875C12.8234 17.875 14.572 17.1507 15.8614 15.8614C17.1507 14.572 17.875 12.8234 17.875 11C17.875 9.17664 17.1507 7.42795 15.8614 6.13864C14.572 4.84933 12.8234 4.125 11 4.125ZM11 13.75C11.2735 13.75 11.5358 13.8587 11.7292 14.052C11.9226 14.2454 12.0312 14.5077 12.0312 14.7812C12.0312 15.0548 11.9226 15.3171 11.7292 15.5105C11.5358 15.7038 11.2735 15.8125 11 15.8125C10.7265 15.8125 10.4642 15.7038 10.2708 15.5105C10.0774 15.3171 9.96875 15.0548 9.96875 14.7812C9.96875 14.5077 10.0774 14.2454 10.2708 14.052C10.4642 13.8587 10.7265 13.75 11 13.75ZM11 6.1875C11.1609 6.18745 11.3167 6.24384 11.4404 6.34685C11.564 6.44986 11.6475 6.59297 11.6765 6.75125L11.6875 6.875V11.6875C11.6878 11.8593 11.6238 12.025 11.5081 12.152C11.3923 12.2789 11.2332 12.3579 11.0621 12.3735C10.891 12.389 10.7203 12.3399 10.5836 12.2358C10.4469 12.1318 10.3541 11.9803 10.3235 11.8113L10.3125 11.6875V6.875C10.3125 6.69266 10.3849 6.5178 10.5139 6.38886C10.6428 6.25993 10.8177 6.1875 11 6.1875Z"
      fill="#FFA51D"
    />
  </svg>
);

const CancelIcon = () => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="19"
    height="19"
    viewBox="0 0 19 19"
    fill="none"
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M9.5 1.72727C5.20724 1.72727 1.72727 5.20724 1.72727 9.5C1.72727 13.7928 5.20724 17.2727 9.5 17.2727C13.7928 17.2727 17.2727 13.7928 17.2727 9.5C17.2727 5.20724 13.7928 1.72727 9.5 1.72727ZM0 9.5C0 4.25329 4.25329 0 9.5 0C14.7467 0 19 4.25329 19 9.5C19 14.7467 14.7467 19 9.5 19C4.25329 19 0 14.7467 0 9.5Z"
      fill="#F54A4A"
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M12.7016 6.29841C13.0389 6.63568 13.0389 7.1825 12.7016 7.51977L7.51977 12.7016C7.1825 13.0389 6.63568 13.0389 6.29841 12.7016C5.96114 12.3643 5.96114 11.8175 6.29841 11.4802L11.4802 6.29841C11.8175 5.96114 12.3643 5.96114 12.7016 6.29841Z"
      fill="#F54A4A"
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M6.29841 6.29841C6.63568 5.96114 7.1825 5.96114 7.51977 6.29841L12.7016 11.4802C13.0389 11.8175 13.0389 12.3643 12.7016 12.7016C12.3643 13.0389 11.8175 13.0389 11.4802 12.7016L6.29841 7.51977C5.96114 7.1825 5.96114 6.63568 6.29841 6.29841Z"
      fill="#F54A4A"
    />
  </svg>
);

export type ToastType = 'success' | 'error' | 'warning' | 'cancel';

interface ToastProps {
  message: string;
  type: ToastType;
  options?: ToastOptions;
  duration?: number;
}

// Custom toast content component
const ToastContent: React.FC<{ message: string; type: ToastType }> = ({ message, type }) => {
  const getIcon = () => {
    switch (type) {
      case 'success':
        return <CheckIcon />;
      case 'error':
        return <ErrorIcon />;
      case 'warning':
        return <WarningIcon />;
      case 'cancel':
        return <CancelIcon />;
      // default:
      //   return <InfoIcon />;
    }
  };

  return (
    <div className="flex items-center gap-3">
      <div className="flex-shrink-0  ">
        {getIcon()}
      </div>
      <span className="text-sm font-medium">{message}</span>
    </div>
  );
};

// Main toast function
export const showToast = ({ message, type, options = {}, duration = 2000 }: ToastProps) => {
  const defaultOptions: ToastOptions = {
    position: 'bottom-center',
    autoClose: duration,
    hideProgressBar: false,
    closeOnClick: true,
    pauseOnHover: true,
    draggable: true,
    progress: undefined,
    icon: false,
    ...options,
  };

  const content = <ToastContent message={message} type={type} />;

  switch (type) {
    case 'success':
      return toast.success(content, defaultOptions);
    case 'error':
      return toast.error(content, defaultOptions);
    case 'warning':
      return toast.warn(content, defaultOptions);
    case 'cancel':
      return toast.info(content, defaultOptions);
    default:
      return toast(content, defaultOptions);
  }
};

// Toast Container Component
export const ToastProvider: React.FC = () => {
  return (
    <ToastContainer
      position="bottom-center"
      autoClose={5000}
      hideProgressBar={false}
      newestOnTop={false}
      closeOnClick
      rtl={false}
      pauseOnFocusLoss
      draggable
      pauseOnHover
      theme="light"
      toastClassName="custom-toast"
      icon={false}
    />
  );
};

export default { showToast, ToastProvider };